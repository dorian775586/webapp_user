import asyncio
import aiohttp
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞
API_TOKEN = "8260030545:AAG9hcUJyuyec6cORIETBwJIR2Yl3aRrIGo"

# URL –≤–∞—à–µ–≥–æ backend
BACKEND_URL = "http://127.0.0.1:8000"

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
main_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìö –ö–∞—Ç–∞–ª–æ–≥")],
    ],
    resize_keyboard=True
)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç nolikby üéâ", reply_markup=main_kb)

# –ö–∞—Ç–∞–ª–æ–≥ –∞–∫—Ü–∏–π
@dp.message(lambda m: m.text == "üìö –ö–∞—Ç–∞–ª–æ–≥")
async def catalog(message: types.Message):
    async with aiohttp.ClientSession() as session:
        async with session.get(f"{BACKEND_URL}/offers") as resp:
            if resp.status != 200:
                await message.answer("–û—à–∏–±–∫–∞ backend.")
                return
            offers = await resp.json()
    if not offers:
        await message.answer("–ù–µ—Ç –∞–∫—Ü–∏–π.")
    else:
        for o in offers[:5]:  # –ø–µ—Ä–≤—ã–µ 5 –∞–∫—Ü–∏–π
            await message.answer(f"{o['id']}: {o['title']} ‚Äî —Å–∫–∏–¥–∫–∞ {o['discount']}%")

if __name__ == "__main__":
    asyncio.run(dp.start_polling(bot))
